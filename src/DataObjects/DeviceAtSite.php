<?php

namespace Wharfs\RmmNsightClient\DataObjects;

use SimpleXMLElement;

//use Carbon\Carbon;

final class DeviceAtSite
{
    public function __construct(
        public string $device_id,
        public string $name,
        public string $description,
        //public string $device_site_last_api_update,
        public string $guid,
        public string $wins_name,
        public string $user,
        public string $domain,
        public string $manufacturer,
        public string $model,
        public string $ip,
        public string $external_ip,
        public string $mac1,
        public string $mac2,
        public string $mac3,
        public string $os,
        public int $os_type,
        public string $service_pack,
        public string $os_serial_number,
        public int $assetid,
        public string $role,
        public int $chassis_type,
        public string $device_serial,
        public int $processor_count,
        public int $total_memory,
        public string $agent_version,
        public string $agent_mode,
        public int $online,
        public string $last_scan_time,
        public int $last_boot_time,
        public string $install_date,
        public int $active_247,
        public int $check_interval_247,
        public int $status_247,
        public string $missed_247,
        public string $utc_time_247,
        public int $dsc_active,
        public int $dsc_status,
        public string $dsc_utc_time,
        public int $email_overdue_alert,
        //public string $device_site_last_api_update,
    ) {
    }

    public static function fromSaloon(SimpleXMLElement $device): static
    {
        return new static(
            device_id: strval($device->serverid),
            name: strval($device->name),
            description: strval($device->description),
            //device_site_last_api_update: strval(Carbon::now()),
            guid: strval($device->guid),
            wins_name: strval($device->wins_name),
            user: strval($device->user),
            domain: strval($device->domain),
            manufacturer: strval($device->manufacturer),
            model: strval($device->model),
            ip: strval($device->ip),
            external_ip: strval($device->external_ip),
            mac1: strval($device->mac1),
            mac2: strval($device->mac2),
            mac3: strval($device->mac3),
            os: strval($device->os),
            os_type: intval($device->os_type),
            service_pack: strval($device->service_pack),
            os_serial_number: strval($device->os_serial_number),
            assetid: intval($device->assetid),
            role: strval($device->role),
            chassis_type: intval($device->chassis_type),
            device_serial: strval($device->device_serial),
            processor_count: intval($device->processor_count),
            total_memory: intval($device->total_memory),
            agent_version: strval($device->agent_version),
            agent_mode: strval($device->agent_mode),
            online: intval($device->online),
            last_scan_time: strval($device->last_scan_time),
            last_boot_time: intval($device->last_boot_time),
            install_date: strval($device->install_date),
            active_247: intval($device->active_247),
            check_interval_247: intval($device->check_interval_247),
            status_247: intval($device->status_247),
            missed_247: strval($device->missed_247),
            utc_time_247: strval($device->utc_time_247),
            dsc_active: intval($device->dsc_active),
            dsc_status: intval($device->dsc_status),
            dsc_utc_time: strval($device->dsc_utc_time),
            email_overdue_alert: intval($device->email_overdue_alert),
            //device_site_last_api_update: strval(Carbon::now()),

        );
    }

    public function toArray(): array
    {
        return [
            'device_id' => $this->device_id,
            'name' => $this->name,
            'description' => $this->description,
            //'device_client_last_api_update' => Carbon::now(),
            'guid' => $this->guid,
            'wins_name' => $this->wins_name,
            'user' => $this->user,
            'domain' => $this->domain,
            'manufacturer' => $this->manufacturer,
            'model' => $this->model,
            'ip' => $this->ip,
            'external_ip' => $this->external_ip,
            'mac1' => $this->mac1,
            'mac2' => $this->mac2,
            'mac3' => $this->mac3,
            'os' => $this->os,
            'os_type' => $this->os_type,
            'service_pack' => $this->service_pack,
            'os_serial_number' => $this->os_serial_number,
            'assetid' => $this->assetid,
            'role' => $this->role,
            'chassis_type' => $this->chassis_type,
            'device_serial' => $this->device_serial,
            'processor_count' => $this->processor_count,
            'total_memory' => $this->total_memory,
            'agent_version' => $this->agent_version,
            'agent_mode' => $this->agent_mode,
            'online' => $this->online,
            'last_scan_time' => $this->last_scan_time,
            'last_boot_time' => $this->last_boot_time,
            'install_date' => $this->install_date,
            'active_247' => $this->active_247,
            'check_interval_247' => $this->check_interval_247,
            'status_247' => $this->status_247,
            'missed_247' => $this->missed_247,
            'utc_time_247' => $this->utc_time_247,
            'dsc_active' => $this->dsc_active,
            'dsc_status' => $this->dsc_status,
            'dsc_utc_time' => $this->dsc_utc_time,
            'email_overdue_alert' => $this->email_overdue_alert,
            //'device_site_last_api_update' => Carbon::now(),

        ];
    }
}
